name: Build and Test

on: [pull_request]

env:
  PLAYWRIGHT_BROWSERS_PATH: 0

jobs:
  build:
    #if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        python-version: [3.9] #3.7, 3.8

    runs-on: ${{ matrix.os }}

    name: Build PyInstaller executable ${{ matrix.os }} + Py ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
#        cache: 'poetry'
    - name: Get packages via poetry
      run: poetry install

#    chrome is not packaged within site-packages, chromium could be used as fallback in the future, but size ~100MB
#    - name: Install playwright
#      run: |
#        poetry run python -m playwright install chromium
#        poetry run python -m playwright install chrome
#        ls

    - name: Create date env variable
      shell: bash
      run: |
        echo "today=$(date +'%Y%m%d')" >> $GITHUB_ENV

    - name: Get CTVB version number
      uses: SebRollen/toml-action@v1.0.0
      id: read_toml
      with:
        file: 'pyproject.toml'
        field: 'tool.poetry.version'

    - name: Build executable
      run: |
        poetry run pyinstaller main_gui.py --onefile --add-binary "ctvbot_logo.ico;." --add-binary "pyproject.toml;." --icon ctvbot_logo.ico --name CTVB_${{steps.read_toml.outputs.value}}_${{env.today}}
        mv ./proxy/ ./dist/

    - name: Upload artifact ${{ matrix.os }}
      uses: actions/upload-artifact@v1
      with:
        name: CTVB_${{ steps.read_toml.outputs.value }}_${{ env.today }}
        path: dist/
